package compiler.synanal;

import java_cup.runtime.*;

import compiler.report.*;

parser code
{:
        public void syntax_error(Symbol cur_token) {
            Report.warning ("Syntax error near word '" + (String)(cur_token.value) + "'.", cur_token.left, cur_token.right);
        }
        
        public void report_error(String message, Object info) {
        }
        
        public void report_fatal_error(String message, Object info) throws Exception {
        	throw new Exception(message);
        }
:}

terminal String BOOL_CONST, CHAR_CONST, INT_CONST, NIL;
terminal String IDENTIFIER;

terminal BOOL, CHAR, INT;
terminal COLON, COMMA, DOT, DOTS, LBRACKET, LPARENTHESIS, RBRACKET, RPARENTHESIS, SEMIC;
terminal ADD, AND, DIV, EQU, GEQ, GTH, LEQ, LTH, MEM, MUL, NEQ, NOT, OR, PTR, SUB, UADD, USUB, VAL;
terminal ARRAY, ASSIGN, BEGIN, CONST, DO, ELSE, END, FOR, FUNCTION, IF, OF, PROCEDURE, PROGRAM, RECORD, THEN, TO, TYPE, VAR, WHILE;

non terminal koda ;
non terminal dKonstant, dpKonstant, dTipov, dpTipov, dSpremenljivk, dpSpremenljivk, dPodprogramov, dProcedure, dFunkcije, oParametrov, opParametrov ;
non terminal oTipa ;
non terminal oVrednosti, kPodprograma, koParametrov ;
non terminal stavek, ifStavek, sStavek, stavki ;

precedence left OR ;
precedence left AND ;
precedence nonassoc EQU, NEQ, LTH, GTH, LEQ, GEQ ;
precedence left ADD, SUB ;
precedence left MUL, DIV ;
precedence nonassoc NOT ;
precedence nonassoc VAL ;
precedence nonassoc UADD, USUB, MEM ;
precedence left DOT, LBRACKET, RBRACKET ;

start with koda;

koda ::=
	PROGRAM IDENTIFIER SEMIC dKonstant dTipov dSpremenljivk dPodprogramov sStavek DOT ;

dKonstant ::=
	|
	CONST dpKonstant ;
dpKonstant ::=
	dpKonstant IDENTIFIER EQU oVrednosti SEMIC |
	IDENTIFIER EQU oVrednosti SEMIC ;
	
dTipov ::=
	|
	TYPE dpTipov ;
dpTipov ::= 
	dpTipov IDENTIFIER EQU oTipa SEMIC |
	IDENTIFIER EQU oTipa SEMIC ;

dSpremenljivk ::=
	|
	VAR dpSpremenljivk ;
dpSpremenljivk ::=
	dpSpremenljivk IDENTIFIER COLON oTipa SEMIC |
	IDENTIFIER COLON oTipa SEMIC ;
	
dPodprogramov ::=
	|
	dProcedure sStavek SEMIC |
	dFunkcije BEGIN stavki END SEMIC ;
	
dProcedure ::=
	PROCEDURE IDENTIFIER oParametrov SEMIC dKonstant dTipov dSpremenljivk dPodprogramov sStavek SEMIC;
	
dFunkcije ::=
	FUNCTION IDENTIFIER oParametrov COLON oTipa SEMIC dKonstant dTipov dSpremenljivk dPodprogramov sStavek SEMIC;
	
oParametrov ::= 
	LPARENTHESIS opParametrov RPARENTHESIS |
	LPARENTHESIS RPARENTHESIS ;
opParametrov ::=
	IDENTIFIER COLON oTipa SEMIC opParametrov |
	IDENTIFIER COLON oTipa ;

oTipa ::= 
	BOOL | 
	CHAR | 
	INT |
	IDENTIFIER |
	ARRAY LBRACKET oVrednosti DOTS oVrednosti RBRACKET OF oTipa |
	RECORD opParametrov END |
	PTR oTipa |
	LPARENTHESIS oTipa RPARENTHESIS ;

oVrednosti ::= 
	BOOL_CONST |
	CHAR_CONST |
	INT_CONST |
	NIL |
	PTR oVrednosti %prec MEM |
	ADD oVrednosti %prec UADD |
	SUB oVrednosti %prec USUB |
	NOT oVrednosti |
	oVrednosti PTR %prec VAL |
	oVrednosti MUL oVrednosti |
	oVrednosti DIV oVrednosti |
	oVrednosti ADD oVrednosti |
	oVrednosti SUB oVrednosti |
	oVrednosti EQU oVrednosti |
	oVrednosti NEQ oVrednosti |
	oVrednosti LTH oVrednosti |
	oVrednosti GTH oVrednosti |
	oVrednosti LEQ oVrednosti |
	oVrednosti GEQ oVrednosti |
	oVrednosti AND oVrednosti |
	oVrednosti OR oVrednosti |
	IDENTIFIER |
	oVrednosti LBRACKET oVrednosti RBRACKET |
	oVrednosti DOT IDENTIFIER |
	kPodprograma |
	LBRACKET oTipa RBRACKET |
	LPARENTHESIS oVrednosti RPARENTHESIS ;
kPodprograma ::=
	IDENTIFIER LPARENTHESIS koParametrov RPARENTHESIS |
	IDENTIFIER LPARENTHESIS RPARENTHESIS;
koParametrov ::= 
	oVrednosti COMMA koParametrov |
	oVrednosti ;

stavek ::=
	oVrednosti |
	oVrednosti ASSIGN oVrednosti |
	ifStavek |
	WHILE oVrednosti DO stavek |
	FOR IDENTIFIER ASSIGN oVrednosti TO oVrednosti DO stavek ;
ifStavek ::=
	IF oVrednosti THEN stavek ELSE stavek |
	IF oVrednosti THEN stavek ;

sStavek ::=
	BEGIN END |
	BEGIN stavki END ;
stavki ::= 
	stavek SEMIC stavki |
	stavek ;